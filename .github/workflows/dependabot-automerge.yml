name: Dependabot Auto-Merge

on:
  pull_request:
    types:
      - labeled

permissions:
  contents: write
  pull-requests: write
  checks: read

concurrency:
  group: auto-merge-${{ github.head_ref }}
  cancel-in-progress: true
  
jobs:
  automerge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Auto-merge if approved and labeled
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const labels = pr.labels.map(l => l.name);
            if (!labels.includes('auto-merge')) {
              throw new Error('Label "auto-merge" not found.');
            }

            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });

            const approved = reviews.data.some(r => r.state === 'APPROVED');

            const status = await github.rest.repos.getCombinedStatusForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: pr.head.sha
            });

            const isGreen = status.data.state === 'success';

            if (approved && isGreen) {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                merge_method: 'squash'
              });
              console.log('PR merged!');
            } else {
              throw new Error('PR not approved or checks failing.');
            }
