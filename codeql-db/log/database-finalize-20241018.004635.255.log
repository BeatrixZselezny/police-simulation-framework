[2024-10-18 00:46:35] This is codeql database finalize codeql-db
[2024-10-18 00:46:35] Log file was started late.
[2024-10-18 00:46:35] Calling plumbing command: codeql resolve languages --format=json
[2024-10-18 00:46:35] [DETAILS] resolve languages> Scanning for [codeql-extractor.yml] from /home/debiana/w3school/objexamples/police/codeql/.codeqlmanifest.json
[2024-10-18 00:46:35] [DETAILS] resolve languages> Parsing /home/debiana/w3school/objexamples/police/codeql/ruby/codeql-extractor.yml.
[2024-10-18 00:46:35] [DETAILS] resolve languages> Parsing /home/debiana/w3school/objexamples/police/codeql/html/codeql-extractor.yml.
[2024-10-18 00:46:35] [DETAILS] resolve languages> Parsing /home/debiana/w3school/objexamples/police/codeql/go/codeql-extractor.yml.
[2024-10-18 00:46:35] [DETAILS] resolve languages> Parsing /home/debiana/w3school/objexamples/police/codeql/cpp/codeql-extractor.yml.
[2024-10-18 00:46:35] [DETAILS] resolve languages> Parsing /home/debiana/w3school/objexamples/police/codeql/swift/codeql-extractor.yml.
[2024-10-18 00:46:35] [DETAILS] resolve languages> Parsing /home/debiana/w3school/objexamples/police/codeql/java/codeql-extractor.yml.
[2024-10-18 00:46:35] [DETAILS] resolve languages> Parsing /home/debiana/w3school/objexamples/police/codeql/properties/codeql-extractor.yml.
[2024-10-18 00:46:35] [DETAILS] resolve languages> Parsing /home/debiana/w3school/objexamples/police/codeql/csv/codeql-extractor.yml.
[2024-10-18 00:46:35] [DETAILS] resolve languages> Parsing /home/debiana/w3school/objexamples/police/codeql/xml/codeql-extractor.yml.
[2024-10-18 00:46:35] [DETAILS] resolve languages> Parsing /home/debiana/w3school/objexamples/police/codeql/javascript/codeql-extractor.yml.
[2024-10-18 00:46:35] [DETAILS] resolve languages> Parsing /home/debiana/w3school/objexamples/police/codeql/python/codeql-extractor.yml.
[2024-10-18 00:46:35] [DETAILS] resolve languages> Parsing /home/debiana/w3school/objexamples/police/codeql/yaml/codeql-extractor.yml.
[2024-10-18 00:46:35] [DETAILS] resolve languages> Parsing /home/debiana/w3school/objexamples/police/codeql/csharp/codeql-extractor.yml.
[2024-10-18 00:46:35] Plumbing command codeql resolve languages completed:
                      {
                        "aliases" : {
                          "c" : "cpp",
                          "c++" : "cpp",
                          "c-c++" : "cpp",
                          "c-cpp" : "cpp",
                          "c#" : "csharp",
                          "java-kotlin" : "java",
                          "kotlin" : "java",
                          "javascript-typescript" : "javascript",
                          "typescript" : "javascript"
                        },
                        "extractors" : {
                          "ruby" : [
                            {
                              "extractor_root" : "/home/debiana/w3school/objexamples/police/codeql/ruby",
                              "extractor_options" : {
                                "trap" : {
                                  "title" : "Options pertaining to TRAP.",
                                  "description" : "Options pertaining to TRAP.",
                                  "type" : "object",
                                  "properties" : {
                                    "compression" : {
                                      "title" : "Controls compression for the TRAP files written by the extractor.",
                                      "description" : "This option is only intended for use in debugging the extractor. Accepted values are 'gzip' (the default, to write gzip-compressed TRAP) and 'none' (to write uncompressed TRAP).\n",
                                      "type" : "string",
                                      "pattern" : "^(none|gzip)$"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "html" : [
                            {
                              "extractor_root" : "/home/debiana/w3school/objexamples/police/codeql/html"
                            }
                          ],
                          "go" : [
                            {
                              "extractor_root" : "/home/debiana/w3school/objexamples/police/codeql/go",
                              "extractor_options" : {
                                "extract_tests" : {
                                  "title" : "Whether to include Go test files in the CodeQL database.",
                                  "description" : "A value indicating whether Go test files should be included in the CodeQL database. The default is 'false'.\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                }
                              }
                            }
                          ],
                          "cpp" : [
                            {
                              "extractor_root" : "/home/debiana/w3school/objexamples/police/codeql/cpp",
                              "extractor_options" : { }
                            }
                          ],
                          "swift" : [
                            {
                              "extractor_root" : "/home/debiana/w3school/objexamples/police/codeql/swift"
                            }
                          ],
                          "java" : [
                            {
                              "extractor_root" : "/home/debiana/w3school/objexamples/police/codeql/java",
                              "extractor_options" : {
                                "exclude" : {
                                  "title" : "A glob excluding files from analysis.",
                                  "description" : "A glob indicating what files to exclude from the analysis.\n",
                                  "type" : "string"
                                },
                                "add_prefer_source" : {
                                  "title" : "Whether to always prefer source files over class files.",
                                  "description" : "A value indicating whether source files should be preferred over class files. If set to 'true', the extraction adds '-Xprefer:source' to the javac command line. If set to 'false', the extraction uses the default javac behavior ('-Xprefer:newer'). The default is 'true'.\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                },
                                "buildless" : {
                                  "title" : "Whether to use buildless (standalone) extraction (experimental).",
                                  "description" : "A value indicating, which type of extraction the autobuilder should perform. If 'true', then the standalone extractor will be used, otherwise tracing extraction will be performed. The default is 'false'. Note that buildless extraction will generally yield less accurate analysis results, and should only be used in cases where it is not possible to build the code (for example if it uses inaccessible dependencies).\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                }
                              }
                            }
                          ],
                          "properties" : [
                            {
                              "extractor_root" : "/home/debiana/w3school/objexamples/police/codeql/properties"
                            }
                          ],
                          "csv" : [
                            {
                              "extractor_root" : "/home/debiana/w3school/objexamples/police/codeql/csv"
                            }
                          ],
                          "xml" : [
                            {
                              "extractor_root" : "/home/debiana/w3school/objexamples/police/codeql/xml"
                            }
                          ],
                          "javascript" : [
                            {
                              "extractor_root" : "/home/debiana/w3school/objexamples/police/codeql/javascript",
                              "extractor_options" : {
                                "skip_types" : {
                                  "title" : "Skip type extraction for TypeScript",
                                  "description" : "Whether to skip the extraction of types in a TypeScript application",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                }
                              }
                            }
                          ],
                          "python" : [
                            {
                              "extractor_root" : "/home/debiana/w3school/objexamples/police/codeql/python",
                              "extractor_options" : {
                                "logging" : {
                                  "title" : "Options pertaining to logging.",
                                  "description" : "Options pertaining to logging.",
                                  "type" : "object",
                                  "properties" : {
                                    "verbosity" : {
                                      "title" : "Python extractor logging verbosity level.",
                                      "description" : "Controls the level of verbosity of the CodeQL Python extractor.\nThe supported levels are (in order of increasing verbosity):\n\n  - off\n  - errors\n  - warnings\n  - info or progress\n  - debug or progress+\n  - trace or progress++\n  - progress+++\n",
                                      "type" : "string",
                                      "pattern" : "^(off|errors|warnings|(info|progress)|(debug|progress\\+)|(trace|progress\\+\\+)|progress\\+\\+\\+)$"
                                    }
                                  }
                                },
                                "python_executable_name" : {
                                  "title" : "Controls the name of the Python executable used by the Python extractor.",
                                  "description" : "The Python extractor uses platform-dependent heuristics to determine the name of the Python executable to use. Specifying a value for this option overrides the name of the Python executable used by the extractor. Accepted values are py, python and python3. Use this setting with caution, the Python extractor requires Python 3 to run.\n",
                                  "type" : "string",
                                  "pattern" : "^(py|python|python3)$"
                                }
                              }
                            }
                          ],
                          "yaml" : [
                            {
                              "extractor_root" : "/home/debiana/w3school/objexamples/police/codeql/yaml"
                            }
                          ],
                          "csharp" : [
                            {
                              "extractor_root" : "/home/debiana/w3school/objexamples/police/codeql/csharp",
                              "extractor_options" : {
                                "trap" : {
                                  "title" : "Options pertaining to TRAP.",
                                  "description" : "Options pertaining to TRAP.",
                                  "type" : "object",
                                  "properties" : {
                                    "compression" : {
                                      "title" : "Controls compression for the TRAP files written by the extractor.",
                                      "description" : "This option is only intended for use in debugging the extractor. Accepted values are 'brotli' (the default, to write brotli-compressed TRAP), 'gzip', and 'none' (to write uncompressed TRAP).\n",
                                      "type" : "string",
                                      "pattern" : "^(none|gzip|brotli)$"
                                    }
                                  }
                                },
                                "buildless" : {
                                  "title" : "DEPRECATED - Whether to use buildless (standalone) extraction.",
                                  "description" : "DEPRECATED: Use `--build-mode none` instead.\nA value indicating, which type of extraction the autobuilder should perform. If 'true', then the standalone extractor will be used, otherwise tracing extraction will be performed. The default is 'false'. Note that buildless extraction will generally yield less accurate analysis results, and should only be used in cases where it is not possible to build the code (for example if it uses inaccessible dependencies).\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                },
                                "logging" : {
                                  "title" : "Options pertaining to logging.",
                                  "description" : "Options pertaining to logging.",
                                  "type" : "object",
                                  "properties" : {
                                    "verbosity" : {
                                      "title" : "Extractor logging verbosity level.",
                                      "description" : "Controls the level of verbosity of the extractor. The supported levels are (in order of increasing verbosity):\n  - off\n  - errors\n  - warnings\n  - info or progress\n  - debug or progress+\n  - trace or progress++\n  - progress+++\n",
                                      "type" : "string",
                                      "pattern" : "^(off|errors|warnings|(info|progress)|(debug|progress\\+)|(trace|progress\\+\\+)|progress\\+\\+\\+)$"
                                    }
                                  }
                                },
                                "binlog" : {
                                  "title" : "Binlog",
                                  "description" : "[EXPERIMENTAL] The value is a path to the MsBuild binary log file that should be extracted. This option only works when `--build-mode none` is also specified.\n",
                                  "type" : "string"
                                }
                              }
                            }
                          ]
                        }
                      }
[2024-10-18 00:46:35] [SPAMMIER] database finalize> Loaded the following extractors: Ruby, HTML, Go, C/C++, Swift, Java/Kotlin, Java Properties Files, CSV, XML, JavaScript/TypeScript, Python, YAML, C#
[2024-10-18 00:46:35] [ERROR] database finalize> CodeQL detected code written in Java/Kotlin but could not process any of it. For more information, review our troubleshooting guide at https://gh.io/troubleshooting-code-scanning/no-source-code-seen-during-build.
[2024-10-18 00:46:35] Exiting with code 32
